ai:
    namespace: ai
    
    decisions:
        namespace: decision
        
        decision:
            - namespace: dwarf
              entity: entity.dynamic.dwarf
              start_node: ai.decision.dwarf.root
              tree:
                - name: root
                  type: ai.decision.node.random
                  random:
                    - chance: 0.6
                      next: ai.decision.dwarf.idle
                    - chance: 0.4
                      next: ai.decision.dwarf.harvest.begin
                - name: idle
                  type: ai.decision.node.task
                  task: ai.task.idle
                - name: harvest.begin
                  type: ai.decision.node.pipeline.start
                  next: ai.decision.dwarf.harvest.decide
                - name: harvest.decide
                  type: ai.decision.node.random
                  random:
                    - chance: 0.5
                      next: ai.decision.dwarf.harvest.food
                    - chance: 0.5
                      next: ai.decision.dwarf.harvest.wood
                - name: harvest.food
                  type: ai.decision.node.task
                  task: ai.task.resource.food
                  next: ai.decision.dwarf.harvest.find.resource
                - name: harvest.wood
                  type: ai.decision.node.task
                  task: ai.task.resource.wood
                  next: ai.decision.dwarf.harvest.find.resource
                - name: harvest.find.resource
                  type: ai.decision.node.task
                  task: ai.task.find.resource
                  success: ai.decision.dwarf.harvest.find.entity
                  fail: ai.decision.dwarf.harvest.end
                - name: harvest.find.entity
                  type: ai.decision.node.task
                  task: ai.task.find.entity
                  success: ai.decision.dwarf.harvest.gotores
                  fail: ai.decision.dwarf.harvest.end
                - name: harvest.gotores
                  type: ai.decision.node.task
                  task: ai.task.goto
                  success: ai.decision.dwarf.harvest.pickupidle
                  fail: ai.decision.dwarf.harvest.release
                - name: harvest.pickupidle
                  type: ai.decision.node.task
                  task: ai.task.idle.harvest
                  next: ai.decision.dwarf.harvest.pickup
                - name: harvest.pickup
                  type: ai.decision.node.task
                  task: ai.task.pickup.resource
                  success: ai.decision.dwarf.harvest.random
                  fail: ai.decision.dwarf.harvest.end
                - name: harvest.random
                  type: ai.decision.node.task
                  task: ai.task.randompoint
                  success: ai.decision.dwarf.harvest.gotodrop
                  fail: ai.decision.dwarf.harvest.drop
                - name: harvest.gotodrop
                  type: ai.decision.node.task
                  task: ai.task.goto
                  success: ai.decision.dwarf.harvest.dropidle
                  fail: ai.decision.dwarf.harvest.drop
                - name: harvest.dropidle
                  type: ai.decision.node.task
                  task: ai.task.idle.store
                  next: ai.decision.dwarf.harvest.drop
                - name: harvest.drop
                  type: ai.decision.node.task
                  task: ai.task.drop.resource
                  next: ai.decision.dwarf.harvest.end
                - name: harvest.release
                  type: ai.decision.node.task
                  task: ai.task.release.resource
                  next: ai.decision.dwarf.harvest.end
                - name: harvest.end
                  type: ai.decision.node.pipeline.stop
                  next: ai.decision.dwarf.idle
                